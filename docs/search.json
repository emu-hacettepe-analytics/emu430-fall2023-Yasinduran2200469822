[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Our Course Project",
    "section": "",
    "text": "about.qmd I’m honored to be a member of the [EMUTrend_explorers] project team.\nBelow, you’ll find a brief summary of our project. To access a detailed project description, please go to our lovely project .\nSummary Analyzing preference patterns: A study on industrial engineering Programs in Ankara\nThis title represents a study examining preference patterns of Industrial Engineering Programs in Ankara.The project aims to analyze the impact of these programs on student preferences ,exploring trends in program preference and identifying potential influencing factors. Key focal points of the study may include preference rates, student motivation for program selection, notable features of the programs, and future expectations. The goal is to shed light on how industrial Engineering Programs in Ankara are perceived and chosen by students.\n\n\n\n Back to top"
  },
  {
    "objectID": "new_docs.html",
    "href": "new_docs.html",
    "title": "Untitled",
    "section": "",
    "text": "Back to top"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "On this page, I showcase the assignment I conducted for the Fall 2023 EMU 430 Data Analytics course.\nPlease use left menu to navigate through my assignments.\nThe most recent update to this page was made on Nowember 3, 2023\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "My first assignment has 3 parts.\n\n\nThis video discusses the effective integration of R, Python, and Tableau. Presented at the RStudio Global 2022 Conference under the title ‘R, Python, and Tableau: Love Triangle,’ it explains how these three popular data analysis and visualization tools can be used together. The speakers share insights into using the advantages of R and Python in data analysis projects to effectively visualize and analyze data with Tableau. This video provides valuable information for those who want to combine data analysis and visualization tools to conduct more comprehensive analyses.”\n1\n\n\n\n\nCoding Style:\n\nR uses a more functional programming style, while Python follows an object-oriented programming approach. In R, functions and data are first-class citizens, and it often uses a pipe operator (%&gt;%), making it concise and expressive for data manipulation.\nPython relies on libraries and packages like NumPy and Pandas for data manipulation, following a more imperative style with method chaining.\n\n\nExample in R:\nRCopy code\n# Using the pipe operator to chain operations data %&gt;%   filter(age &gt; 30) %&gt;%   group_by(gender) %&gt;%   summarize(mean_income = mean(income))\nExample in Python:\npythonCopy code\n# Using Pandas to chain operations data[data['age'] &gt; 30].groupby('gender')['income'].mean()\n\nSyntax:\n\nR has a different syntax with unique operators and conventions. For instance, R uses &lt;- for assignment, and indexing starts from 1. It also employs vectorization for many operations.\nPython uses = for assignment and indexing starts from 0. It’s known for its clean and readable syntax, emphasizing indentation (whitespace) for code blocks.\n\n\nExample in R:\nRCopy code\n# R assignment x &lt;- 5 # R indexing my_vector[1]\nExample in Python:\npythonCopy code\n# Python assignment x = 5 # Python indexing my_list[0]\n\nEcosystem:\n\nR has a rich ecosystem for statistical analysis and visualization with packages like ggplot2, dplyr, and shiny, making it a go-to language for statisticians and data scientists.\nPython has a broader ecosystem beyond data science, including web development, machine learning, and automation. It is known for libraries like TensorFlow, Scikit-Learn, Django, and Flask.\n\n\nExample in R (using ggplot2 for plotting):\nRCopy code\nlibrary(ggplot2) ggplot(data, aes(x=age, y=income, color=gender)) + geom_point()\nExample in Python (using Matplotlib for plotting):\npythonCopy code\nimport matplotlib.pyplot as plt plt.scatter(data['age'], data['income'], c=data['gender']) plt.show()\nThese are some of the key differences between R and Python. The choice between the two depends on the specific use case and personal preference, as both languages have their strengths and weaknesses.\n2"
  },
  {
    "objectID": "assignments/assignment-1.html#a",
    "href": "assignments/assignment-1.html#a",
    "title": "Assignment 1",
    "section": "",
    "text": "This video discusses the effective integration of R, Python, and Tableau. Presented at the RStudio Global 2022 Conference under the title ‘R, Python, and Tableau: Love Triangle,’ it explains how these three popular data analysis and visualization tools can be used together. The speakers share insights into using the advantages of R and Python in data analysis projects to effectively visualize and analyze data with Tableau. This video provides valuable information for those who want to combine data analysis and visualization tools to conduct more comprehensive analyses.”\n1"
  },
  {
    "objectID": "assignments/assignment-1.html#b",
    "href": "assignments/assignment-1.html#b",
    "title": "Assignment 1",
    "section": "",
    "text": "Coding Style:\n\nR uses a more functional programming style, while Python follows an object-oriented programming approach. In R, functions and data are first-class citizens, and it often uses a pipe operator (%&gt;%), making it concise and expressive for data manipulation.\nPython relies on libraries and packages like NumPy and Pandas for data manipulation, following a more imperative style with method chaining.\n\n\nExample in R:\nRCopy code\n# Using the pipe operator to chain operations data %&gt;%   filter(age &gt; 30) %&gt;%   group_by(gender) %&gt;%   summarize(mean_income = mean(income))\nExample in Python:\npythonCopy code\n# Using Pandas to chain operations data[data['age'] &gt; 30].groupby('gender')['income'].mean()\n\nSyntax:\n\nR has a different syntax with unique operators and conventions. For instance, R uses &lt;- for assignment, and indexing starts from 1. It also employs vectorization for many operations.\nPython uses = for assignment and indexing starts from 0. It’s known for its clean and readable syntax, emphasizing indentation (whitespace) for code blocks.\n\n\nExample in R:\nRCopy code\n# R assignment x &lt;- 5 # R indexing my_vector[1]\nExample in Python:\npythonCopy code\n# Python assignment x = 5 # Python indexing my_list[0]\n\nEcosystem:\n\nR has a rich ecosystem for statistical analysis and visualization with packages like ggplot2, dplyr, and shiny, making it a go-to language for statisticians and data scientists.\nPython has a broader ecosystem beyond data science, including web development, machine learning, and automation. It is known for libraries like TensorFlow, Scikit-Learn, Django, and Flask.\n\n\nExample in R (using ggplot2 for plotting):\nRCopy code\nlibrary(ggplot2) ggplot(data, aes(x=age, y=income, color=gender)) + geom_point()\nExample in Python (using Matplotlib for plotting):\npythonCopy code\nimport matplotlib.pyplot as plt plt.scatter(data['age'], data['income'], c=data['gender']) plt.show()\nThese are some of the key differences between R and Python. The choice between the two depends on the specific use case and personal preference, as both languages have their strengths and weaknesses.\n2"
  },
  {
    "objectID": "assignments/assignment-1.html#footnotes",
    "href": "assignments/assignment-1.html#footnotes",
    "title": "Assignment 1",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nChatgbt↩︎\nChatgbt is used in section b↩︎"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "B.S., Industrial Engineering, Hacettepe University, Turkey, 2020 - ongoing."
  },
  {
    "objectID": "about.html#employements",
    "href": "about.html#employements",
    "title": "About Me",
    "section": "Employements",
    "text": "Employements\n\nFirm Vivense, Position sales consultant, year 2023\nFirm Tutis Tourism, Position barman, year 2022"
  },
  {
    "objectID": "about.html#internships",
    "href": "about.html#internships",
    "title": "About Me",
    "section": "Internships",
    "text": "Internships\n\nFirm Nurus, position Summer Internshıp, year 2023"
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Question 1\n\nwe have 2 links pre 2010 and after 2010, we combine them in one vector.\n\n\nCode\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.2\nWarning: package 'ggplot2' was built under R version 4.3.2\nWarning: package 'tibble' was built under R version 4.3.2\nWarning: package 'tidyr' was built under R version 4.3.2\nWarning: package 'readr' was built under R version 4.3.2\nWarning: package 'purrr' was built under R version 4.3.2\nWarning: package 'dplyr' was built under R version 4.3.2\nWarning: package 'stringr' was built under R version 4.3.2\nWarning: package 'forcats' was built under R version 4.3.2\nWarning: package 'lubridate' was built under R version 4.3.2\n\nCode\nlibrary(stringr)\nlibrary(rvest)\n\nWarning: package 'rvest' was built under R version 4.3.2\n\nCode\nlibrary(ggplot2)\nlibrary(knitr)\n\nWarning: package 'knitr' was built under R version 4.3.2\n\nCode\nlibrary(reshape2)\n\nWarning: package 'reshape2' was built under R version 4.3.2\n\nCode\nIMDB_1 &lt;- \"https://www.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR&count=250\"\nIMDB_2 &lt;- \"https://www.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR&count=250\"\nIMDB_vector&lt;- c(IMDB_1,IMDB_2)\n\n\n\nQuestion 2\n\nCreating Web Scraping: Title, Year, Duration, Rating, Votes\n\n\n\nCode\ntable_titles &lt;- c()\ntable_years &lt;- c()\ntable_durations &lt;- c()\ntable_ratings &lt;- c()\ntable_votes &lt;- c()\n\nfor(url in IMDB_vector){\n  page = read_html(url)\n  \n  title_names &lt;- page |&gt; html_nodes('.ipc-title__text')\n  title_names &lt;- html_text(title_names)\n  title_names &lt;- tail(head(title_names,-1),-1)\n  title_names &lt;- str_split(title_names, \" \", n=2)\n  title_names &lt;- unlist(lapply(title_names, function(x) {x[2]}))\n  \n  year &lt;- page |&gt; html_nodes(\".sc-43986a27-7.dBkaPT.dli-title-metadata\")\n  year &lt;- html_text(year)\n  year &lt;- substr(year, 1, 4)\n  year &lt;- as.numeric(year)\n  \n  duration &lt;- page |&gt; html_nodes(\".sc-1b7x5y9-6.gwfzJB.dli-watch-bar\") %&gt;%\n  html_text() %&gt;%\n  str_extract_all(\"\\\\d+\") %&gt;%\n  lapply(function(x) as.numeric(x)) %&gt;%\n  unlist() %&gt;%\n  sum()\n  \n  rating &lt;- page |&gt; html_nodes(\".ipc-rating-star.ipc-rating-star--base.ipc-rating-star--imdb.ratingGroup--imdb-rating\")\n  rating &lt;- html_text(rating)\n  rating &lt;- substr(rating, 1, 3)\n  rating &lt;- as.numeric(rating)\n  \n  vote &lt;- page |&gt; html_nodes(\".sc-53c98e73-0.kRnqtn\")\n  vote &lt;- html_text(vote)\n  vote &lt;- sub(\"Votes\", \"\" ,vote)\n  vote &lt;- sub(\",\", \"\", vote)\n  vote &lt;- as.numeric(vote)\n  \n  Titles &lt;- append(table_titles,title_names)\n  Years &lt;- append(table_years, year)\n  Durations &lt;- append(table_durations, duration)\n  Ratings &lt;- append(table_ratings, rating)\n  Votes &lt;- append(table_votes, vote)\n  \n}\n\nmovies_df &lt;- data.frame(Titles, Years, Durations, Ratings, Votes)\nkable(head(movies_df,10), caption = \"Movies Dataframe\")\n\n\n\nMovies Dataframe\n\n\nTitles\nYears\nDurations\nRatings\nVotes\n\n\n\n\nNefes: Vatan Sagolsun\n2009\n0\n8.0\n35017\n\n\nBabam ve Oglum\n2005\n0\n8.2\n91022\n\n\nMasumiyet\n1997\n0\n8.1\n19282\n\n\nKader\n2006\n0\n7.8\n16249\n\n\nUzak\n2002\n0\n7.5\n22362\n\n\nEskiya\n1996\n0\n8.1\n71698\n\n\nA.R.O.G\n2008\n0\n7.3\n44631\n\n\nSevmek Zamani\n1965\n0\n8.0\n7125\n\n\nHababam Sinifi\n1975\n0\n9.2\n42512\n\n\nÜç Maymun\n2008\n0\n7.3\n22652\n\n\n\n\n\n\n\nQuestion 3\n\n\n\nArrange your data frame in descending order by Rating. Present the top 5 and bottom 5 movies based on user ratings. Have you watched any of these movies? Do you agree or disagree with their current IMDb Ratings?\n\n\n\n\n\nCode\nmovies_df &lt;- movies_df[order(movies_df$Ratings, decreasing = TRUE),]\n\n\n\nTop 5 movies based on user ratings.\n\n\nCode\nkable(head(movies_df, 5), caption = \"Top 5 Movies Based On User Ratings.\")\n\n\n\nTop 5 Movies Based On User Ratings.\n\n\n\nTitles\nYears\nDurations\nRatings\nVotes\n\n\n\n\n9\nHababam Sinifi\n1975\n0\n9.2\n42512\n\n\n25\nTosun Pasa\n1976\n0\n8.9\n24327\n\n\n89\nHababam Sinifi Sinifta Kaldi\n1975\n0\n8.9\n24370\n\n\n73\nSüt Kardesler\n1976\n0\n8.8\n20885\n\n\n36\nSaban Oglu Saban\n1977\n0\n8.7\n18535\n\n\n\n\n\nI have watched all the movies listed in the top 5. They are films that I can watch repeatedly without getting bored. However, I don’t think they deserve to be in the top 5.\n\n\nBottom 5 movies based on user ratings.\n\n\nCode\nkable(tail(movies_df, 5), caption = \"Bottom 5 Movies Based On User Ratings.\")\n\n\n\nBottom 5 Movies Based On User Ratings.\n\n\n\nTitles\nYears\nDurations\nRatings\nVotes\n\n\n\n\n158\nAraf\n2006\n0\n2.4\n4276\n\n\n86\nÇilgin Dersane\n2007\n0\n1.9\n3899\n\n\n129\nKeloglan Karaprens’e Karsi\n2006\n0\n1.6\n9616\n\n\n33\nDünyayi Kurtaran Adam’in Oglu\n2006\n0\n1.5\n16704\n\n\n195\nEmret Komutanim: Sah Mat\n2007\n0\n1.5\n7047\n\n\n\n\n\nI haven’t watched any of the movies mentioned in the lower ranks. Honestly, I believe they deserve their places in the ranking.\n\n\n\n*Showing favourite films and evalute them\n\n\n\n\n\n\n\n\nMy top 5 list is below:\n\nNefes:Vatan Sağolsun\nDağ\nDağ 2\nBabam ve Oğlum\nKader\n\nThis list contains my favourite movies. If I choose 2 movies from this list, these movies would be Nefes:Vatan Sağolsun and Babam ve Oğlum.\n\n\n\nConsidering that audience rating is a crucial indicator of movie quality, what can you infer about the average ratings of Turkish movies over the years? Calculate yearly rating averages and plot them as a scatter plot. Similarly, plot the number of movies over the years. You might observe that using yearly averages could be misleading due to the increasing number of movies each year. As an alternative solution, plot box plots of ratings over the years (each year having a box plot showing statistics about the ratings of movies in that year). What insights do you gather from the box plot?\n\n\n\n\n\nCode\n# Assuming 'movies' data frame is available with columns: Titles, Years, Ratings, Votes\n\nlibrary(tidyverse)\nlibrary(ggplot2)\n\n# Calculate yearly rating averages\naverage_ratings &lt;- movies_df %&gt;%\n  group_by(Years) %&gt;%\n  summarise(Average_Rating = mean(Ratings),\n            Number_of_Movies = n())\n\n# Scatter plot for yearly rating averages\nggplot(average_ratings, aes(x = Years, y = Average_Rating, size = Number_of_Movies)) +\n  geom_point() +\n  labs(title = \"Yearly Average Ratings of Turkish Movies\",\n       x = \"Years\",\n       y = \"Average Rating\") +\n  theme_minimal()\n\n\n\n\n\nCode\n# Number of movies over the years\nggplot(average_ratings, aes(x = Years, y = Number_of_Movies)) +\n  geom_bar(stat = \"identity\", fill = \"blue\") +\n  labs(title = \"Number of Turkish Movies Released Each Year\",\n       x = \"Years\",\n       y = \"Number of Movies\") +\n  theme_minimal()\n\n\n\n\n\nCode\n# Box plots of ratings over the years\nggplot(movies_df, aes(x = as.factor(Years), y = Ratings)) +\n  geom_boxplot(fill = \"blue\") +\n  labs(title = \"Box Plots of Ratings of Turkish Movies Over the Years\",\n       x = \"Years\",\n       y = \"Ratings\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nDo you believe there is a relationship between the number of votes a movie received and its rating? Investigate the correlation between Votes and Ratings.\n\n\n\n\n\nCode\ncorr_rating_vote = cor(movies_df$Ratings, movies_df$Votes)\ncorr_rating_vote\n\n\n[1] 0.233614\n\n\n\n\n\nDo you believe there is a relationship between a movie’s duration and its rating?\n\n\n\n\n\nCode\ncorr_duration_rating = cor(movies_df$Durations, movies_df$Ratings)\n\n\nWarning in cor(movies_df$Durations, movies_df$Ratings): the standard deviation\nis zero\n\n\nCode\ncorr_duration_rating\n\n\n[1] NA\n\n\nAs we see, there is no relationship between duration and rating.\n\n\nQuestion 4\n\n\n\nUse IMDb’s Advanced Title Search interface with The Title Type set to “Movie” only, the Country set to “Turkey” with the option “Search country of origin only” active, and the Awards & Recognation set to “IMDB Top 1000”. You should find a total of 11 movies.\n\n\n\n\n\nCode\nIMDB_3 = \"https://www.imdb.com/search/title/?title_type=feature&groups=top_1000&country_of_origin=TR&count=250\"\nmovie_name &lt;- c()\nmovie_year &lt;- c()\n\npage = read_html(IMDB_3)\n\ntitle_names &lt;- page |&gt; html_nodes('.ipc-title__text')\ntitle_names &lt;- html_text(title_names)\ntitle_names &lt;- tail(head(title_names,-1),-1)\ntitle_names &lt;- str_split(title_names, \" \", n=2)\ntitle_names &lt;- unlist(lapply(title_names, function(x) {x[2]}))\n\nyear &lt;- page|&gt; html_nodes(\".sc-43986a27-7.dBkaPT.dli-title-metadata\")\nyear &lt;- html_text(year)\nyear &lt;- substr(year, 1, 4)\nyear &lt;- as.numeric(year)\n\nmovie_name &lt;- append(movie_name, title_names)\nmovie_year &lt;- append(movie_year, year)\ntop1000_df &lt;- data.frame(movie_name, movie_year)\nkable(top1000_df, caption = \"Turkish movies in IMDB Top1000 without rating, duration and votes\")\n\n\n\nTurkish movies in IMDB Top1000 without rating, duration and votes\n\n\nmovie_name\nmovie_year\n\n\n\n\nYedinci Kogustaki Mucize\n2019\n\n\nKis Uykusu\n2014\n\n\nNefes: Vatan Sagolsun\n2009\n\n\nAyla: The Daughter of War\n2017\n\n\nBabam ve Oglum\n2005\n\n\nAhlat Agaci\n2018\n\n\nBir Zamanlar Anadolu’da\n2011\n\n\nEskiya\n1996\n\n\nG.O.R.A.\n2004\n\n\nVizontele\n2001\n\n\nHer Sey Çok Güzel Olacak\n1998\n\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Analytics Lab",
    "section": "",
    "text": "Hello! My name is Yasin DURAN.\nThis is my personal webpage.\nPlease stay tuned to follow my works on data analytics, blog posts, and more.\nThis is our template.\n\n\n\n Back to top"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "This page is under construction.\n\n\n\n Back to top"
  }
]